AWSTemplateFormatVersion: 2010-09-09
Description: stack which returns  a shopping cart receipt with the total price and the sales taxes

Metadata:
  AWS::Cloudformation::Interface:
    Parametergroups:
      - Label:
          default: API
        Parameters:
          - ApiStageName
          - AccessLogRetentionInDays
          - FunctionMemorySize
          - FunctionTimeout
          - FunctionLogRetentionInDays
          - UpsertSalesTaxesTotalPriceHandlerName

Parameters:
  ApiStageName:
    Description: API stage name - integer version identifier
    AllowedPattern: "^v[0-9]+$"
    Type: String

  AccessLogRetentionInDays:
    Description: API access log retention in days
    Type: Number
    Default: 7

  FunctionLogRetentionInDays:
    Description: Lambda log retention in days
    Type: Number
    Default: 7

  FunctionMemorySize:
    Description: How many megabytes of ram to allocate for the lambda
    Type: Number
    Default: 128

  FunctionTimeout:
    Description: Lambda timeout in seconds
    Type: Number
    Default: 3

  UpsertSalesTaxesTotalPriceHandlerName:
    Description: Lambda function name for the 'get profile' handler
    AllowedPattern: "^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$"
    Type: String

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${AWS::StackName}-restapi
      Tags:
        - Key: "receipt-cc:name"
          Value: !Sub ${AWS::StackName}-restapi

  RequestValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      Name: !Sub ${AWS::StackName}-requestvalidator
      RestApiId: !Ref RestApi
      ValidateRequestBody: True
      ValidateRequestParameters: True

  CollectionResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: receipt
      RestApiId: !Ref RestApi

  ShoppingBasketResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref CollectionResource
      PathPart: "{shoppingbasket}"
      RestApiId: !Ref RestApi

  UpsertSalesTaxesTotalPriceMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: PUT
      RequestParameters:
        method.request.path.shoppingbasket: True
      RequestValidatorId: !Ref RequestValidator
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
        - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpsertSalesTaxesTotalPriceHandlerArn}/invocations
        - UpsertSalesTaxesTotalPriceHandlerArn: !GetAtt UpsertSalesTaxesTotalPriceHandler.Arn
      MethodResponses:
        - StatusCode: "204"
        - StatusCode: "404"
        - StatusCode: "500"
        - StatusCode: "502"
      ResourceId: !Ref CollectionResource
      RestApiId: !Ref RestApi

  UpsertSalesTaxesTotalPriceHandlerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "receipt-cc:name"
          Value: !Sub ${UpsertSalesTaxesTotalPriceHandlerName}-executionrole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByLambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UpsertSalesTaxesTotalPriceHandlerExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogCreation
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  UpsertSalesTaxesTotalPriceHandler:
    Type: AWS::Lambda::Function
    Properties:
      Tags:
        - Key: "receipt-cc:name"
          Value: !Ref UpsertSalesTaxesTotalPriceHandlerName
      Code:
        ZipFile: // dummy
      FunctionName: !Ref UpsertSalesTaxesTotalPriceHandlerName
      Runtime: nodejs12.x
      Handler: index.handler
      Role: !GetAtt UpsertSalesTaxesTotalPriceHandlerExecutionRole.Arn
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout

  UpsertSalesTaxesTotalPriceHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpsertSalesTaxesTotalPriceHandlerName}
      RetentionInDays: !Ref FunctionLogRetentionInDays

  UpsertSalesTaxesTotalPriceHandlerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - RestApi
      - UpsertSalesTaxesTotalPriceHandler
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt UpsertSalesTaxesTotalPriceHandler.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/${ApiStageName}/PUT/receipt/{shoppingbasket}

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - UpsertSalesTaxesTotalPriceMethod
    Properties:
      RestApiId: !Ref RestApi

  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-api-${ApiStageName}
      RetentionInDays: !Ref AccessLogRetentionInDays

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      Tags:
        - Key: "receipt-cc:name"
          Value: !Sub ${AWS::StackName}-stage
      AccessLogSetting:
        DestinationArn: !GetAtt AccessLogGroup.Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
      DeploymentId: !Ref Deployment
      MethodSettings:
        - CachingEnabled: False
          DataTraceEnabled: True
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: True
          ResourcePath: "/*"
      RestApiId: !Ref RestApi
      StageName: !Ref ApiStageName
      TracingEnabled: False

  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayLoggingRole.Arn

  ApiGatewayLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "receipt-cc:name"
          Value: !Sub ${AWS::StackName}-apigateway-loggingrole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAssumeRoleByApiGateway
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

Outputs:
  ApiBaseURL:
    Description: "API Base URL"
    Value: !Sub https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}
