name: s3-website

on:
  push:
    paths:
    - ".github/workflows/s3-website.yml"
    - "s3-website/**"

env:
  AWS_REGION: us-east-1

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      CFN_TEMPLATES: "./s3-website/stack.yml\n.github/cd_setup.yml\n"
    steps:
      - name: clone the repo
        uses: actions/checkout@v2.3.4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.5.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: validate all cloudformation templates
        run: |
          printf "${{ env.CFN_TEMPLATES }}" | while read template; do
            aws cloudformation validate-template \
              --template-body="file://$template"
          done

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      _stack_name: ${{ steps.configure_environment.outputs._stack_name }}
    steps:
      - name: clone the repo
        uses: actions/checkout@v2.3.4

      - name: map branch 2 test/prod
        run: |
          if [[ ${{ github.ref }} == *main ]]; then
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
          fi

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.5.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: configure the environment
        id: configure_environment
        run: |
          echo "SITE_STACK_NAME=$ENVIRONMENT-s3-website" >> $GITHUB_ENV
          echo "SITE_BUCKET_NAME=$ENVIRONMENT-s3-website" >> $GITHUB_ENV
          echo "::set-output name=_stack_name::$ENVIRONMENT-s3-website"

      - name: deploy the s3 website stack
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.SITE_STACK_NAME }} \
            --template-file=./s3-website/stack.yml \
            --parameter-overrides \
              BucketName=${{ env.SITE_BUCKET_NAME }} \
            --no-fail-on-empty-changeset \
            --capabilities=CAPABILITY_IAM
